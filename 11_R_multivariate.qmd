---
title: "Multivariate exposures"
engine: knitr
date-modified: last-modified
filters:
  - webr
webr:
  packages: ['lmtp', 'SuperLearner', 'rpart', 'gam']
  autoload-packages: true
  repos: 
    - https://nt-williams.r-universe.dev
bibliography: references.bib
nocite: |
  @diaz2023nonparametric, @taylor2016statistical
---

{{< include macros.qmd >}}

```{webr-r}
#| context: setup
download.file("https://raw.githubusercontent.com/nt-williams/lmtp-workshop/main/data/mixtures.csv", "mixtures.csv")
mixtures <- read.csv("mixtures.csv")
```

-   `lmtp` can estimate effects of simultaneous interventions on multiple variables

-   Practically, this is useful for assessing the effects of mixtures on environmental outcomes

## NIEHS Simulation Data

For our example of estimating the effects of simultaneous interventions on multiple variables, we will use simulated data from the 2015 NIEHS Mixtures Workshop. The data has already been loaded into R in the background as `mixtures`. You can view and download the raw data [here](https://raw.githubusercontent.com/nt-williams/lmtp-workshop/main/data/mixtures.csv).

-   The simulated data has $n = 500$ observations and is intended to replicate a prospective cohort study.

-   The data is composed of 7 log-normally distributed and correlated exposures variables (`"X1", "X2", "X3", "X4", "X5", "X6", "X7"`), a single continuous outcome (`"Y"`), and one binary confounder (`"Z"`).

-   There is no missing covariate data, no measurement error, and no censoring.

\

```{r echo=FALSE}
mixtures <- read.csv("data/mixtures.csv") |> 
  dplyr::select(-obs)

DT::datatable(mixtures, class = "compact custom-dt", 
                options = list(
                  searching = FALSE, 
                  lengthChange = FALSE, 
                  ordering = FALSE, 
                  info = FALSE, 
                  columnDefs = list(
                    list(targets = 0, visible = FALSE),
                    list(className = 'dt-left', targets = "_all")  # apply to all columns
                  )
                )) |> 
  DT::formatRound(columns = setdiff(names(mixtures), "Z"), digits = 2)
```
\

-   Only exposure variables `X1`, `X2`, `X4`, `X5`, and `X7` have an effect on the outcome `Y`. However, the direction of the effects varies.

-   `X1`, `X2`, and `X7` are positively associated with the outcome.

-   `X4` and `X5` are negatively associated with the outcome.

## Multivariate shift functions

::: {.callout-note appearance="simple"}
Only two things need to change when using `lmtp` estimators with multivariate treatments:

1.  Instead of a vector, you should now pass a list to the `trt` argument

2.  The shift function should return a named list of vectors instead of a single vector.
:::

Let's use `lmtp` to estimate the effect of a modified treatment policy which intervenes on all 7 exposure simultaneously on the outcome:

$$
\dd(\mathbf{a}, h) = 
\begin{cases} \dd(a_1, h) = 
\begin{cases}
a_1 - 0.2 &\text{ if } a_1 - 0.2 > 0 \\
a_1 &\text{ otherwise }
\end{cases} \\
\dd(a_2, h) = 
\begin{cases}
a_2 - 0.4 &\text{ if } a_2 - 0.4 > 0 \\
a_2 &\text{ otherwise }
\end{cases} \\
\dd(a_3, h) = a_3 + 0.4 \\
\dd(a_4, h) = a_4 + 0.1 \\
\dd(a_5, h) = a_5 + 0.5 \\
\dd(a_6, h) = 
\begin{cases}
a_6 - 0.2 &\text{ if } a_6 - 0.2 > 0 \\
a_6 &\text{ otherwise }
\end{cases} \\
\dd(a_7, h) = 
\begin{cases}
a_7 - 0.3 &\text{ if } a_7 - 0.3 > 0 \\
a_7 &\text{ otherwise }
\end{cases}
\end{cases}
$$

```{webr-r}
#| autorun: true
A <- list(paste0("X", 1:7))

d <- function(data, a) {
  d1 <- \(x) ifelse(x - 0.2 > 0, x - 0.2, x)
  d2 <- \(x) ifelse(x - 0.4 > 0, x - 0.4, x)
  d6 <- \(x) ifelse(x - 0.2 > 0, x - 0.2, x)
  d7 <- \(x) ifelse(x - 0.3 > 0, x - 0.3, x)
  
  out <- list(
    d1(data[[a[1]]]),
    d2(data[[a[2]]]), 
    data[[a[3]]] + 0.4, 
    data[[a[4]]] + 0.1, 
    data[[a[5]]] + 0.5, 
    d6(data[[a[6]]]), 
    d7(data[[a[7]]])
  )
  
  setNames(out, a)
}
```

## Problem 1

Using TMLE, estimate the population mean outcome under the simultaneous intervention we just defined. Fit both the treatment mechanism and the outcome regression using this set of learners: `c("SL.mean", "SL.glm", "SL.gam", "SL.rpart", "SL.rpartPrune", "SL.step.interaction")`. Assign the result to `ans`. To save time, don't use crossfitting; `lmtp` has already been loaded into the R session.


```{webr-r}
set.seed(4363754)

# Type your code here!
ans <- 
```

<details/>

<summary style="color: grey; font-weight: 400;">

✅ Solution 

</summary>

```{r eval=FALSE}
set.seed(4363754)

learners <- c("SL.mean", 
              "SL.glm", 
              "SL.gam", 
              "SL.rpart", 
              "SL.rpartPrune", 
              "SL.step.interaction")

ans <- lmtp_tmle(data = mixtures, 
                 trt = A, 
                 outcome = "Y", 
                 baseline = "Z", 
                 shift = d, 
                 mtp = TRUE,
                 outcome_type = "continuous",
                 learners_trt = learners, 
                 learners_outcome = learners, 
                 folds = 1)

print(ans)
```

</details>

## Problem 2

Compared to what was observed under the natural course of exposure, how did intervening upon the set of exposures effect the outcome? Estimate this effect using `lmtp_contrast()`.

```{webr-r}
# Type your code here!
```

<details/>

<summary style="color: grey; font-weight: 400;">

✅ Answer 

</summary>

```{r eval=FALSE}
obs_y <- mean(mixtures$Y)
lmtp_contrast(ans, ref = obs_y)
```

</details>
